-------------HTML--------------
1.meta标签的作用
移动端适配，seo优化，忽略手机自动识别电话/邮箱

2.工作中常用的标签
div, span, p, h, i(icon图标)

3.让子元素position:absolution生效，父元素也需要设置positnon
css3中：translate效果相同

4.



-------------CSS--------------
1.margin重叠问题
子元素和父元素重叠，bfc解决Block Formatting Context。盒模型布局的CSS渲染模式，渲染成一个隔离的容器。
解决：最优解是：display:inline-block。其他比如overflow：hidden，或者用position。

2.em和rem
em会根据自己字体的大小，除非没有设置大小，他便会进行继承。

3.bootstrap栅格系统原理
container画容器，row画行，col画每一列。row做了清楚浮动，通过为“列（col）”设置padding属性，从而创建列与列之间的间隔。通过为.row元素设置负值margin从而抵消掉为.container元素设置的padding,也就间接为“行（row）”所包含的“列（col）”抵消掉了padding
负值的margin就是下面的示例为什么是 向外突出的原因。在栅格列中内容排成一行。







-------------JS--------------
JS 数据类型可分为基本数据类型和复合数据类型两种，其中基本数据类型有五种：字符串（String）、数字(Number)、布尔(Boolean)、空（Null）、未定义（Undefined）。复合数据类型即 Object，Object 本质是一组无序的名值对组成的，严格来说，又被分为三类：对象(Object)、数组(Array)、函数（function）。






-------------协议理论--------------



-------------前端框架--------------
***React***
library库：小而巧，只提供了特定的api，方便从一个库切换到另一个库，但是代码几乎不会改变。
framework框架：大而全，提供了一整套解决方案，在项目中切换框架是比较困难的。

*三大框架：
angular.js:比较早的的前端框架。
vue.js:最火的前端框架，文档比较友好。关注的人比较多。
react.j: 目前最流行的。用的人多。

react和vue对比：
模块化：从代码的角度来进行分析的。把可复用的代码抽离为单个的模块，便于项目的维护的开发。
组件化：是从ui界面的角度来进行分析的。把可复用的ui元素，抽离为单独的组件。
组件化的好处：随着项目规模的增大，手里的组件越来越多，可以很方便的把现有的组件拼接撑一个完整的页面。
vue如何实现组件化：通过.vue文件来创建做组件。
react实现组件化：react有组件化的概念，但是没有vue这种组件文件，一切都是以js来表现的。

虚拟dom：
dom：浏览器中的概念，用js对象来表示页面上的元素，提供了操作dom对象的api；
什么是react中的虚拟dom：是框架中的概念，用js对象模拟页面上的dom和dom嵌套；

