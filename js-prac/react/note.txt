library库：小而巧，只提供了特定的api，方便从一个库切换到另一个库，但是代码几乎不会改变。
framework框架：大而全，提供了一整套解决方案，在项目中切换框架是比较困难的。

*三大框架：
angular.js:比较早的的前端框架。
vue.js:最火的前端框架，文档比较友好。关注的人比较多。
react.j: 目前最流行的。用的人多。

react和vue对比：
模块化：从代码的角度来进行分析的。把可复用的代码抽离为单个的模块，便于项目的维护的开发。
组件化：是从ui界面的角度来进行分析的。把可复用的ui元素，抽离为单独的组件。
组件化的好处：随着项目规模的增大，手里的组件越来越多，可以很方便的把现有的组件拼接撑一个完整的页面。
vue如何实现组件化：通过.vue文件来创建做组件。vue.component(),

dom：js对象来表示页面上的元素，并提供了dom操作的api
虚拟dom：用js对象来模拟页面上的dom和dom嵌套

dom tree：
1.浏览器请求服务器获取页面html代码。
2.浏览器在内存中解析dom结构，并在浏览器内存中渲染出一颗dom tree。
3.浏览器把dom tree呈现到页面上。

*浏览器中没有提供直接获取dom tree的api，无法拿到浏览器内存中的domtree。手动模拟新旧两个domtree。

diff算法：
tree diff：新旧两颗dom树，逐层对比的过程。
component trr:在进行tree diff的时候，每一层中组件级别的对比叫做ct。如果对比前后，组件相同，暂时不需要更新，如果类型不同，则需要移除旧组件，创建新组件，并追加到页面上。
element diff：如果两个组件类型相同，则需要进行元素级别的对比。


